package com.produccion.entities;
// Generated 24/09/2018 13:27:46 by Hibernate Tools 4.3.1


import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Receta generated by hbm2java
 */

@Entity(name = "Receta")
@Table(name = "receta")
public class Receta  implements java.io.Serializable {

    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
     private Integer idreceta;
    @Column(name = "fechaalta")
     private Date fechaalta;
    @Column(name = "fechabaja")
     private Date fechabaja;
    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name="idProducto")
     private Producto producto;
    @OneToMany(fetch = FetchType.EAGER, mappedBy = "receta",cascade = CascadeType.ALL, orphanRemoval = true)
    private List<Cantidadmr> materiales = new ArrayList<>();

    public Receta() {
    }

    public Receta(Producto producto) {
       this.fechaalta = new Date();
       this.producto = producto;
    }
   
    public Integer getIdreceta() {
        return this.idreceta;
    }
    
    public void setIdreceta(Integer idreceta) {
        this.idreceta = idreceta;
    }
    public Date getFechaalta() {
        return this.fechaalta;
    }
    
    public void setFechaalta(Date fechaalta) {
        this.fechaalta = fechaalta;
    }
    public Date getFechabaja() {
        return this.fechabaja;
    }
    
    public void setFechabaja(Date fechabaja) {
        this.fechabaja = fechabaja;
    }

    public Producto getProducto() {
        return producto;
    }

    public void setProducto(Producto producto) {
        this.producto = producto;
    }

    public List<Cantidadmr> getMateriales() {
        return materiales;
    }

    public void addMaterial(Material material, Integer cantidad) {
        Cantidadmr newMaterial = new Cantidadmr(this, material, cantidad);
        this.materiales.add(newMaterial);
    }

    
    /*public void removeMaterial(Material material) {
        for (Iterator<Cantidadmr> iterator = materiales.iterator(); iterator.hasNext(); ) {
            Cantidadmr cantidadmr = iterator.next();
 
            if (cantidadmr.getReceta().equals(this) && cantidadmr.getMaterial().equals(material)) {
                iterator.remove();
                cantidadmr.getMaterial().getRecetas().remove(cantidadmr);
                cantidadmr.setMaterial(null);
                cantidadmr.setReceta(null);
            }
        }
    }*/
}


