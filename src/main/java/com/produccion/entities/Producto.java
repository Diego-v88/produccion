package com.produccion.entities;
// Generated 24/09/2018 13:27:46 by Hibernate Tools 4.3.1

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;


/**
 * Producto generated by hbm2java
 */

@Entity(name = "Producto")
@Table(name = "producto")
public class Producto  implements java.io.Serializable {

    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
     private Integer idproducto;
    @Column(name = "codbarra")
     private String codbarra;
    @Column(name = "nombre")
     private String nombre;
    @Column(name = "peso")
     private int peso;
    @Column(name = "largo")
     private int largo;
    @Column(name = "ancho")
     private int ancho;
    @Column(name = "alto")
     private int alto;
    @Column(name = "descripcion")
     private String descripcion;
    @OneToMany(mappedBy = "producto", cascade = CascadeType.ALL, orphanRemoval = true)
     private List<Cantidadproductos> cantidadProductosPlan = new ArrayList<>();
    @OneToMany(mappedBy = "producto", cascade = CascadeType.ALL, orphanRemoval = true)
    private List<Circuito> circuitos = new ArrayList<>();
    @OneToMany(mappedBy = "producto", cascade = CascadeType.ALL, orphanRemoval = true)
    private List<Receta> recetas = new ArrayList<>();
    @OneToMany(mappedBy = "producto", cascade = CascadeType.ALL, orphanRemoval = true)
    private List<Cantidadproductos> planesDeProduccion = new ArrayList<>();

    public Producto() {
    }

    public Producto(String codbarra, String nombre, int peso, int largo, int ancho, int alto, String descripcion) {
       this.codbarra = codbarra;
       this.nombre = nombre;
       this.peso = peso;
       this.largo = largo;
       this.ancho = ancho;
       this.alto = alto;
       this.descripcion = descripcion;
    }
   
    public Integer getIdproducto() {
        return this.idproducto;
    }
    
    public void setIdproducto(int idproducto) {
        this.idproducto = idproducto;
    }
    public String getCodbarra() {
        return this.codbarra;
    }
    
    public void setCodbarra(String codbarra) {
        this.codbarra = codbarra;
    }
    public String getNombre() {
        return this.nombre;
    }
    
    public void setNombre(String nombre) {
        this.nombre = nombre;
    }
    public int getPeso() {
        return this.peso;
    }
    
    public void setPeso(int peso) {
        this.peso = peso;
    }
    public int getLargo() {
        return this.largo;
    }
    
    public void setLargo(int largo) {
        this.largo = largo;
    }
    public int getAncho() {
        return this.ancho;
    }
    
    public void setAncho(int ancho) {
        this.ancho = ancho;
    }
    public int getAlto() {
        return this.alto;
    }
    
    public void setAlto(int alto) {
        this.alto = alto;
    }
    public String getDescripcion() {
        return this.descripcion;
    }
    
    public void setDescripcion(String descripcion) {
        this.descripcion = descripcion;
    }

    public List<Cantidadproductos> getCantidadProductosPlan() {
        return cantidadProductosPlan;
    }

    public void setCantidadProductosPlan(List<Cantidadproductos> cantidadProductosPlan) {
        this.cantidadProductosPlan = cantidadProductosPlan;
    }

    public void setIdproducto(Integer idproducto) {
        this.idproducto = idproducto;
    }

    public List<Circuito> getCircuitos() {
        return circuitos;
    }

    public void setCircuitos(List<Circuito> circuitos) {
        this.circuitos = circuitos;
    }

    public List<Receta> getRecetas() {
        return recetas;
    }

    public void addRecetas(Receta receta) {
        this.recetas.add(receta);
    }

    public List<Cantidadproductos> getPlanesDeProduccion() {
        return planesDeProduccion;
    }

    public void setPlanesDeProduccion(List<Cantidadproductos> planesDeProduccion) {
        this.planesDeProduccion = planesDeProduccion;
    }
    
    public Receta getRecetaActiva() {
        Receta receta = new Receta();
        for (Iterator<Receta> iterator = recetas.iterator(); iterator.hasNext();) {
            Receta next = iterator.next();
            if (next.getFechabaja() == null) {
                receta = next;
                break;
            }
        }
        return receta;
    }
    
        public Circuito getCircuitoActivo() {
        Circuito circuito = new Circuito();
        for (Iterator<Circuito> iterator = circuitos.iterator(); iterator.hasNext();) {
            Circuito next = iterator.next();
            if (next.getFechabaja() == null) {
                circuito = next;
                break;
            }
        }
        return circuito;
    }
}


